version: '3.7'

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  server:
    build:
      context: .
      target: development
    hostname: server
    container_name: server
    depends_on:
      - redis
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GITHUB_API_TOKEN=351b1b95793f9c3cf71af0540b0c147aa6e08e36
      - MAX_SEARCH_DEPTH=1
    command: npm run start:dev
    volumes:
      - .:/usr/src/app/
      # - /usr/src/app/node_modules
    links:
      - redis
    ports:
      - "3000:3000"

  worker:
    build:
      context: .
      target: development
      dockerfile: worker/Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEO4J_URL=bolt://neo4j:neo4j@neo4j:7687
      - M2_HOME=/usr/share/maven
      - JP2G_JAR=/home/app/jp2g/target/java-parse-to-graph-1.0-SNAPSHOT.jar
      - MAX_SEARCH_DEPTH=1
    # command: "sh -c 'node /app/build/worker.js'"
    command: npm run pure:start-dev
    volumes:
      - ./worker/worker.ts:/home/app/worker.ts
      - ./libs/models:/home/app/libs/models
    depends_on: 
      - redis
      - neo4j
      - server
    links: 
      - neo4j
    ports: 
      - "3000"

  redis:
    container_name: redis
    image: redis:4.0.14-alpine
    expose:
      - "6379"
  
  neo4j:
    container_name: neo4j
    image: neo4j:4.0
    ports:
      - "7687:7687"
      - "7474:7474"
      - "7473:7473"
    volumes:
      - $HOME/neo4j/data:/data
      - $HOME/neo4j/logs:/logs

  # bull-board:
  #   image: jondum/bull-board:latest
  #   container_name: bull-board
  #   depends_on: 
  #     - redis
  #     - server
  #   environment:
  #     - REDIS_HOST=redis://redis
  #     - PORT=3020
  #   ports:
  #     - "3020:3020"

  bull-board:
    image: tombh/bull-board:latest
    container_name: bull-board
    depends_on: 
      - redis
      - server
    environment:
      - REDIS_HOST=redis
      - REDIS_PASSWORD=''
      - PORT=3020
    ports:
      - "3020:3000"

  cadvisor:
    image: google/cadvisor:latest
    ports:
      - 8080:8080
    volumes:
      - ./:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: always
    deploy:
      mode: global

  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - ./:/rootfs:ro
    # command: 
    #   - '--path.procfs=/host/proc' 
    #   - '--path.sysfs=/host/sys'
    #   - --collector.filesystem.ignored-mount-points
    #   - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    # networks:
    #   - back-tier
    restart: always
    deploy:
      mode: global

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      # - '--storage.tsdb.path=/prometheus'
      # - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      # - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
    depends_on:
      - worker
      - cadvisor
    # networks:
    #   - back-tier
    restart: always

  grafana:
    image: grafana/grafana:latest
    # user: "104"
    depends_on:
      - prometheus
    ports:
      - 3040:3000
    volumes:
      - grafana_data:/var/lib/grafana
    #   - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
    # networks:
    #   - back-tier
    #   - front-tier
    restart: always